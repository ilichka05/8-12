def 1():
import PIL.Image
import PIL.ImageTk
from tkinter import Tk, Label, BOTH

image_file = 'image.jpg' 
image = PIL.Image.open(image_file)

width, height = image.size
format = image.format
mode = image.mode

print(f"Ширина изображения: {width}")
print(f"Высота изображения: {height}")
print(f"Формат изображения: {format}")
print(f"Цветовая модель изображения: {mode}")

root = Tk()
root.title("Изображение")

image_tk = PIL.ImageTk.PhotoImage(image)

label = Label(root, image=image_tk)
label.pack(fill=BOTH, expand=True)

root.mainloop()

def 2():
import cv2

image = cv2.imread('input.jpg')

reduced_image = cv2.resize(image, (0,0), fx=1/3, fy=1/3)

horizontal_flip = cv2.flip(image, 1)

vertical_flip = cv2.flip(image, 0)

cv2.imwrite('reduced.jpg', reduced_image)

cv2.imwrite('horizontal_flip.jpg', horizontal_flip)

cv2.imwrite('vertical_flip.jpg', vertical_flip)

def 3():
import cv2
import os

os.mkdir('filtered_images')

images = ['1.jpg', '2.jpg', '3.jpg', '4.jpg', '5.jpg']

for image in images:
    
    image = cv2.imread(image)

    sepia_image = cv2.sepia(image, None)

    cv2.imwrite(os.path.join('filtered_images', f'{image}_sepia.jpg'), sepia_image)

def 4():
import cv2
import os

os.mkdir('watermarked_images')

images = ['1.jpg', '2.jpg', '3.jpg', '4.jpg', '5.jpg']

watermark = cv2.imread('watermark.png')

watermark_height, watermark_width = watermark.shape[:2]

for image_name in images:
    
    image = cv2.imread(image_name)

    image_height, image_width = image.shape[:2]

    watermark_x = image_width - watermark_width - 10
    watermark_y = image_height - watermark_height - 10

    image[watermark_y:watermark_y+watermark_height, watermark_x:watermark_x+watermark_width] = watermark

    cv2.imwrite(os.path.join('watermarked_images', f'{image_name}_watermarked.jpg'), image)
